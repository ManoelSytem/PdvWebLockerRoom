// <auto-generated />
using System;
using InfraEstrutura;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InfraEstrutura.Migrations
{
    [DbContext(typeof(AplicationDbContext))]
    [Migration("20200811200345_DbFoodService")]
    partial class DbFoodService
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dominio.Cardapio", b =>
                {
                    b.Property<int>("idCardapio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("idUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("titulo")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("idCardapio");

                    b.ToTable("Cardapio");
                });

            modelBuilder.Entity("Dominio.Cliente", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("contato")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("dataEntrada")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("dataUpdate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("descricao")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("endereco")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("logo")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("nome")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<byte>("status")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("IdUser");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Dominio.ListaItemProduto", b =>
                {
                    b.Property<int>("codigoLista")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("codProduto")
                        .HasColumnType("int");

                    b.Property<int>("codigoCardapio")
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("titulo")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("codigoLista");

                    b.ToTable("ListaItemProduto");
                });

            modelBuilder.Entity("Dominio.Produto", b =>
                {
                    b.Property<int>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("nome")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<float>("valor")
                        .HasColumnType("float");

                    b.HasKey("codigo");

                    b.ToTable("Produto");
                });
#pragma warning restore 612, 618
        }
    }
}
